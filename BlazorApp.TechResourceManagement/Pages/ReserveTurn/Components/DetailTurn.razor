@page "/dialogcard"

@using BlazorApp.TechResourceManagement.Domain

@inject DialogService DialogService

<div class="row">
    <div class="col-lg-12 d-flex">
        <RadzenCard class="w-100 m-3">
            <h3 class="h5">Informacion del Recurso Tecnologico</h3>
            <div class="flex-row">
                <RadzenImage Path="@recursoTecnologico.Imagenes.FirstOrDefault()" Class="rounded-circle float-start mt-1 mr-3 w-25" />
                <div class="float-end">
                    <div>Nro</div>
                    <b>#@(recursoTecnologico.MostrarRT().NumeroRT)</b>
                    <div class="mt-3">Tipo</div>
                    <b>@recursoTecnologico.MostrarRT().TipoRecursoTecnologico.MostrarCategoria().Nombre</b>
                    <div class="mt-3">Modelo</div>
                    <b>@recursoTecnologico.MostrarRT().ModeloDelRT.MostrarModelo().Nombre</b>
                </div>
            </div>
        </RadzenCard>
    </div>
    <div class="col-lg-12 d-flex">
        <RadzenCard class="w-100 m-3">
            <h3 class="h5">Informacion del Turno</h3>
            <div class="row">
                <div class="col">
                    <div>Fecha Hora Inicio</div>
                    <b>@(turno.MostrarTurno().FechaHoraInicio.ToString("dd-MM-yyyy HH:mm"))</b>
                </div>
                <div class="col">
                    <div>Fecha Hora Fin</div>
                    <b>@(turno.MostrarTurno().FechaHoraFin.ToString("dd-MM-yyyy HH:mm"))</b>
                </div>
            </div>
        </RadzenCard>
    </div>
    <div class="col-lg-12 d-flex">
        <RadzenCard class="w-100 m-3">
            <h3 class="h5">Forma de notificar turno</h3>
            <div class="row">
                <div class="col">
                    <RadzenCheckBox @bind-Value=@email Name="Email" TValue="bool" />
                    <i class="fa-solid fa-envelope"></i> Email
                </div>
                <div class="col">
                    <RadzenCheckBox @bind-Value=@whatsapp Name="Whatsapp" TValue="bool" />
                    <i class="fa-brands fa-whatsapp"></i> Whatsapp
                </div>
            </div>
        </RadzenCard>
    </div>
</div>
<div class="row">
    <div class="col-md-12 text-right">
        <RadzenButton Click="@((args) => DialogService.Close(false))" ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Style="width: 120px" Class="mr-1" />
        <RadzenButton Click="ShowDialogDetailTurn" Text="OK" Style="width: 120px" />
    </div>
</div>

@code {
    [Parameter]
    public RecursoTecnologico recursoTecnologico { get; set; }
    [Parameter]
    public EventCallback<(bool, string, string)> OnShowDialogCallback { get; set; }
    [Parameter]
    public Turno turno { get; set; }
    public bool whatsapp { get; set; }
    public bool email { get; set; } = true;

    private async Task ShowDialogDetailTurn()
    {
        DialogService.Close(true);

        this.ShowBusyDialog(true, "Confirmacion de Reserva de Turno");
    }

    public async void ShowBusyDialog(bool withMessageAsString, string message)
    {
        InvokeAsync(async () =>
        {
            // Simulate background task
            await Task.Delay(2000);

            // Close the dialog
            DialogService.Close();
        });

        if (withMessageAsString)
        {
            await BusyDialog(message, "images/resource-tech-background-4.jpg");
        }
        else
        {
            await BusyDialog(string.Empty, "images/resource-tech-background-0.jpg");
        }
    }

    // Busy dialog from markup
    public async Task BusyDialog(string message, string pathImage)
    {
        await DialogService.OpenAsync("Información", ds =>
    @<div>
        <div class="row">
            <div class="col text-center p-5">
                <RadzenImage Path="@pathImage"
                         class=" d-inline-block justify-content-between align-items-center"
                         Style="width: 200px; margin-bottom: 40px;" />
                <h3>@message</h3>
            </div>
        </div>
    </div>,
    new DialogOptions()
        {
            Style = "min-height:auto;min-width:auto;width:auto",
            CloseDialogOnEsc = true,
            CloseDialogOnOverlayClick = true
        });
    }

}